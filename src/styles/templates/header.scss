header {
  display: flex;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  min-height: $line * 10;
  padding: $line * 2 0;

  .logo-link {
    visibility: hidden;
    transform-origin: 20% center;
    margin: 0 0 0 $line * 1.5;
    text: {
      decoration: none;
      align: center;
    }
    line-height: $line / 2;

    animation: {
      duration: $time * 2;
      timing-function: cubic-bezier(.7,0,.3,1);
      delay: $time * 8;
      fill-mode: forwards;
    }

    .euro-esteco-logo {
      display: block;
      height: $line * 10;
    }
  }

  .main-menu {
    margin: auto;
    display: flex;
    width: 65%;

    perspective-origin: center;
    perspective: $line * 100;

    overflow: hidden;
    backface-visibility: hidden;

    .menu-item {
      padding: $line * 1.5 0;
      flex-grow: 1;
      min-width: 12%;
      display: flex;
      align-items: center;
      justify-content: center;
      text: {
        decoration: none;
        align: center;
      }
      border: {
        top: $line / 3 solid $light;
        bottom: $line / 3 solid $light;
      }
      color: $light;
      font: {
        size: $line * 1.5;
        family: Tahoma;
      }
      transition: {
        duration: $time;
        timing-function: linear;
      }
      transform: {
        origin: top center;
        style: preserve-3d;
      }

      @for $i from 1 through 6 {
        $angle: 90deg + ($i * 30deg);
        $delay: ($time * 9) + ($i * $time / 2);
        &:nth-of-type(#{$i}) {
          transform: rotate3d(1, 0, 0, $angle);
          animation: {
            delay: $delay;
          }
        }
      }

      animation: {
        duration: $time * 10;
        timing-function: linear;
        iteration-count: 1;
        direction: normal;
        fill-mode: both;
      }

      &.current {
        color: $green;
        background: {
          color: $light !important;
        }
      }

      &:hover:not(.current) {
        background: {
          color: transparentize($green, 0.4);
        }
      }
    }
  }

  #language-box {
    position: relative;
    margin:  0 $line * 5 0 0;

    .language-btn {
      padding: $line * 2 $line * 4;
      background: {
        color: $green;
      }
      color: $light;
      transition: {
        duration: $time;
        timing-function: linear;
      }
      cursor: pointer;

      transform: translateX(200%);
      opacity: 0;

      animation: {
        duration: $time * 3;
        delay: $time * 10;
        timing-function: ease-out;
        direction: normal;
        iteration-count: 1;
        fill-mode: forwards;
      }

      &:hover {
        background: {
          color: lighten($green, 5);
        }
      }
    }

    nav {
      width: 100%;
      position: absolute;
      display: flex;
      flex-direction: column;
      overflow: {
        y: hidden;
      }
      overflow: {
        x: hidden;
      }
      z-index: 1;

      .language-item {
        padding: $line * 1.5;
        margin: $line / 2 0 0 0;
        color: $green;
        text: {
          decoration: none;
          align: center;
        }
        background: {
          color: $light;
        }
        opacity: 0;
        transition:
                transform $time ease-in,
                opacity $time linear;

        &.current-language {
          color: $light;
          background: {
            color: $green;
          }
        }

        @for $i from 1 through 4 {
          &:nth-of-type(#{$i}) {
            transform: translateY(-100% * $i);
          }
        }

        &::before {
          position: absolute;
          top: 0;
          right: 0;
          display: block;
          content: "";
          height: 100%;
          width: $line / 2;
          background: {
            color: $light;
          }
          transform-origin: center;
          transition: {
            duration: $time / 2;
            timing-function: linear;
          }
          transform: scaleY(0);
        }

        &:hover:not(.current-language) {
          color: $light !important;
          background: {
            color: $green;
          }

          &::before {
            transform: scaleY(1);
          }
        }

        &.active {
          transform: translateY(0);
          opacity: 1;
        }
      }
    }
  }
}