@import "templates/variables";

body,
html {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  @include noScroll();
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  background: {
    image: url("../images/bg.png");
    size: cover;
    position: 0 0;
    attachment: fixed;
  }

  @import "templates/preloader";
  @import "templates/header";
  @import "templates/feedback-button";
  @import "templates/up-button";

  main {
    flex-grow: 1;
    width: 100%;
    display: flex;
    justify-content: space-between;

    #materials-left-nav,
    #materials-right-nav {
      padding: 0 $line $line;
      display: flex;
      flex-direction: column;
      justify-content: space-around;

      .materials-item {
        cursor: default;
        font: {
          weight: bold;
        }
        flex-basis: 30%;
        background: {
          color: $green;
        }
        border: {
          radius: 50%;
        }
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        animation: {
          duration: $time * 2;
          timing-function: ease-out;
          direction: normal;
          iteration-count: 1;
          fill-mode: forwards;
        }
        box-shadow: 0 $line / 10 $line / 2 0 $light;

        .ico {
          font: {
            family: Materials, sans-serif;
          }
          color: $darkGreen;
          transition: {
            duration: $time;
          }
        }

        .materials-caption {
          margin: 0;
          padding: $line 0 0;
          color: $light;
          font: {
            family: Arial, sans-serif;
          }
        }

        &.active {

          .ico {
            color: $light;
          }
        }
      }
    }

    #materials-left-nav {

      .materials-item {

        @for $i from 1 through 3 {
          $step: 100% + ($i * 100%);
          &:nth-of-type(#{$i}) {
            transform: translateX($step * -1);
            animation: {
              delay: $time * 12 + ($i * $time);
            }
          }
        }
      }
    }

    #materials-right-nav {

      .materials-item {

        @for $i from 1 through 3 {
          $step: 100% + ($i * 100%);
          &:nth-of-type(#{$i}) {
            transform: translateX($step);
            animation: {
              delay: $time * 12 + ($i * $time);
            }
          }
        }
      }
    }

    .main-center {
      flex-grow: 1;
      overflow: {
        y: scroll;
      }
      @include noScroll();
      font: {
        family: Arial, sans-serif;
      }

      > [class$="-block"] {
        height: 100%;
        display: flex;
        flex-wrap: wrap;
        align-content: flex-start;
        align-items: flex-start;

        > [class*="-item"] {
          position: relative;
          margin: 0 $line $line;
          text-align: center;
          color: $light;
          background: {
            color: transparentize($green, 0.2);
          }
          flex-basis: 40%;
          flex-grow: 1;
          display: flex;
          flex-direction: column;
          justify-content: space-around;
          box-shadow: 0 $line / 10 $line / 2 0 $light;
          text: {
            align: right;
          }

          .content-caption {
            align-self: center;
            width: 80%;
            padding: $line * 1.5 $line;
            margin: 0 0 $line 0;
            font: {
              size: $line * 1.75;
              weight: normal;
              family: Arial, sans-serif;
            }
            transition: {
              duration: $time / 2;
              timing-function: linear;
            }

            em {
              color: darken($light, 30);
              font: {
                size: $line * 1.5;
              }
            }

            &::before {
              position: absolute;
              left: 5%;
              display: flex;
              align-items: center;
              content: '•';
              color: $light;
              padding: $line;
              font: {
                family: Materials, sans-serif;
                size: $line * 3;
              }
              transition: {
                duration: $time / 2;
                timing-function: linear;
              }
            }
          }

          .content-info {
            flex-grow: 1;
            display: flex;
            flex-direction: row;
            justify-content: space-around;
            align-items: flex-start;
            margin: 0;
            transform:
                    scaleY(0)
                    translateX(-300%);
            transition: {
              duration: $time + 0.2s;
              timing-function: linear;
            }

            .content-slider {
              position: relative;
              flex-basis: 45%;
              margin: 0;
              padding: 0;
              overflow: {
                x: hidden;
                y: hidden;
              }

              .view-3d {
                position: absolute;
                top: 0;
                right: 0;
                display: block;
                border: none;
                outline: none;
                padding: $line $line * 4;
                background: {
                  color: $green;
                }
                font: {
                  weight: bold;
                  family: Arial, sans-serif;
                }
                color: $light;
                cursor: pointer;
              }

              img,
              iframe {
                display: block;
                margin: 0;
                padding: 0;
                min-height: 100%;
                width: 100%;
                box-shadow: 0 $line / 10 $line / 2 0 $green;
              }

              iframe {
                display: none;
              }
            }

            table {
              text: {
                align: center;
              }
              color: $light;
              border: {
                collapse: collapse;
              }

              tr:nth-of-type(odd) {
                background: {
                  color: $green;
                }
              }

              tr:nth-last-of-type(even) {
                background: {
                  color: lighten($darkGreen, 1);
                }
              }

              td {
                padding: $line * 2 $line;
              }
            }

            &.anim {
              transform:
                      scaleY(1)
                      translateX(0);
            }
          }

          &:hover:not(.current) {
            cursor: pointer;

            &::before,
            .content-caption:not(em) {
              text-shadow: $line / 5 $line / 5 $line / 5 $grey;
            }
          }

          &.current {
            color: $green;
            background: {
              color: $light;
            }
            margin: auto;
            width: 100%;
            height: 100%;
            transition: {
              duration: $time;
              timing-function: linear;
            }

            .content-caption {
              width: 100%;
              font: {
                weight: bold;
              }
              text: {
                align: center;
              }
              cursor: pointer;

              &::before {
                content: '◘';
                color: $green;
              }

              em {
                color: $green;
                font: {
                  weight: bold;
                  style: normal;
                }
              }

              &:hover {
                background: {
                  color: $green;
                }
                color: $light;

                em {
                  color: darken($light, 30);
                }

                &:before {
                  color: $light;
                }
              }
            }
          }
        }
      }
    }
  }

  @import "templates/footer";

  &.visible {
    @include bodyVisible;

    .materials-item {
      animation: {
        name: sideMenu;
      }
    }
  }
}